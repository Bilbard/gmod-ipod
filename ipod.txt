@name ipod
@inputs EGP:wirelink Up Down Menu FF RW PP Select RadioPlayed RadioLength Ref Lk Loading LoadInfo:array RadioEnded
@outputs Test MenCount Active SongURL:string SongVol MenuType:string SelMen SongStat LockLatch SongPause LastMenu:array NPFunc SongPos NameScrollOffset SongLoop
@outputs MenuStore:table Debug
@persist MenuList:table Sel SelMen LastMenu:array MenCount MenuType:string ActiveC Shift PlayStat StoreSong:array 
@persist MinsPlayed CaseCol:vector MenColInv MenuCol:vector NameScrollOffset ArtistScrollOffset AlbumScrollOffset NSOB ASOB ALSOB GlobalFont:string NPFunc
@trigger 
#include "ipoddata"
runOnTick(1)
function drawFunyLogo(){
    EGP:egpBox(1,vec2(256,256),vec2(512,512)) #backdrop
    EGP:egpColor(1,MenuCol)
    EGP:egpCircle(2,vec2(236,256),vec2(35,50))
    EGP:egpAngle(2,8)
    EGP:egpColor(2,vec(MenColInv*255,MenColInv*255,MenColInv*255))
    EGP:egpCircle(3,vec2(276,256),vec2(35,50))
    EGP:egpAngle(3,-8)
    EGP:egpColor(3,vec(MenColInv*255,MenColInv*255,MenColInv*255))
    EGP:egpCircle(4,vec2(316,256),vec2(25,25))
    EGP:egpColor(4,MenuCol)
    EGP:egpCircle(5,vec2(262,190),vec2(10,20))
    EGP:egpColor(5,vec(MenColInv*255,MenColInv*255,MenColInv*255))
    EGP:egpAngle(5,-35)
    if(hostname():find("NeoTek")){
        EGP:egpText(6,"Fuck you, NeoTek.",vec2(90,415))
        EGP:egpFont(6,GlobalFont)
        EGP:egpSize(6,50)
        EGP:egpColor(6,vec())
    }
}
function drawBack() {
    EGP:egpBox(1,vec2(256,256),vec2(512,512)) #backdrop
    EGP:egpColor(1,MenuCol)
    EGP:egpBox(2,vec2(256,65),vec2(512,7))
    EGP:egpColor(2,vec(MenColInv*255,MenColInv*255,MenColInv*255))
    EGP:egpText(3,"iPod",vec2(215,10))
    EGP:egpFont(3,GlobalFont)
    EGP:egpSize(3,45)
    EGP:egpColor(3,vec(MenColInv*255,MenColInv*255,MenColInv*255))
    EGP:egpBoxOutline(4,vec2(450,33),vec2(65,35))
    EGP:egpSize(4,3)
    EGP:egpColor(4,vec(MenColInv*255,MenColInv*255,MenColInv*255))
    EGP:egpBox(5,vec2(428,33),vec2(10,25))
    EGP:egpColor(5,vec(MenColInv*255,MenColInv*255,MenColInv*255))
    EGP:egpBox(6,vec2(442,33),vec2(10,25))
    EGP:egpColor(6,vec(MenColInv*255,MenColInv*255,MenColInv*255))
    EGP:egpBox(7,vec2(456,33),vec2(10,25))
    EGP:egpColor(7,vec(MenColInv*255,MenColInv*255,MenColInv*255))
    EGP:egpBox(8,vec2(470,33),vec2(10,25))
    EGP:egpColor(8,vec(MenColInv*255,MenColInv*255,MenColInv*255))
    EGP:egpBox(9,vec2(485,33),vec2(7,13))
    EGP:egpColor(9,vec(MenColInv*255,MenColInv*255,MenColInv*255))
}
function drawPlayStatus(Playing){
    if (Playing==1){
        EGP:egpTriangle(10,vec2(50,33),vec2(30,15),vec2(30,48))
        EGP:egpColor(10,vec(MenColInv*255,MenColInv*255,MenColInv*255))
        EGP:egpColor(11,vec4(0,0,0,0))
    } else {
        EGP:egpBox(10,vec2(50,33),vec2(12,30))
        EGP:egpBox(11,vec2(30,33),vec2(12,30))
        EGP:egpColor(10,vec(MenColInv*255,MenColInv*255,MenColInv*255))
        EGP:egpColor(11,vec4(MenColInv*255,MenColInv*255,MenColInv*255,255))
    } 
}
function drawLock(){
    if (Lk){
        EGP:egpBox(12,vec2(83,38),vec2(28,20))
        EGP:egpLineStrip(13,vec2(72,30),vec2(76,19),vec2(83,16),vec2(90.5,19),vec2(94,30))
        EGP:egpSize(13,6)
        EGP:egpColor(12,vec(MenColInv*255,MenColInv*255,MenColInv*255))
        EGP:egpColor(13,vec(MenColInv*255,MenColInv*255,MenColInv*255))
    }else{
        EGP:egpBox(12,vec2(0,0),vec2(0,0))
        EGP:egpCircleOutline(13,vec2(0,0),vec2(0,0))
    }
}
function drawNowPlaying(Name:string,Duration,Played,Artist:string,Album:string,Mode){
    #if(Name:length()>23&NSOB==0){NSOB=1}else{NSOB=0}
    #if(NSOB!=0){
    #    NameScrollOffset+=22*NSOB
    #    if(NameScrollOffset/22>5){NSOB=-1}
    #    #elseif(NameScrollOffset<(Name:length()-23)/3){NSOB=-1}
    #}
    FancyTimePlayedT=floor(Played/60)#mins
    FancyTimePlayedT2=round((Played-(FancyTimePlayedT*60))):toString()#seconds
    if(FancyTimePlayedT2:length()<2){FancyTimePlayedT2="0"+FancyTimePlayedT2}
    FancyTimePlayedString=(FancyTimePlayedT):toString()+":"+FancyTimePlayedT2
    
    
    FancyTimeRemainingT=floor(Duration/60)
    FancyTimeRemainingString=(FancyTimeRemainingT):toString()+":"+round((Duration-(60*FancyTimeRemainingT))):toString()
    if(FancyTimeRemainingString:index(1)=="-"){FancyTimeRemainingString="0:00"}
    
    EGP:egpText(14,Name,vec2(256+(NameScrollOffset),140))
    EGP:egpFont(14,GlobalFont)
    EGP:egpColor(14,vec(MenColInv*255,MenColInv*255,MenColInv*255))
    EGP:egpSize(14,45)
    EGP:egpText(15,Artist,vec2(256-(Artist:length()*10),205))
    EGP:egpFont(15,GlobalFont)
    EGP:egpColor(15,vec(MenColInv*255,MenColInv*255,MenColInv*255))
    EGP:egpSize(15,45)
    EGP:egpText(16,Album,vec2(256-(Album:length()*10),270))
    EGP:egpFont(16,GlobalFont)
    EGP:egpColor(16,vec(MenColInv*255,MenColInv*255,MenColInv*255))
    EGP:egpSize(16,45)

    EGP:egpBoxOutline(17,vec2(256,350),vec2(384,45))
    EGP:egpColor(17,vec(MenColInv*255,MenColInv*255,MenColInv*255))
    EGP:egpSize(17,7)
    
    if (!Mode){
        EGP:egpText(18,FancyTimePlayedString,vec2(65,375))
        EGP:egpFont(18,GlobalFont)
        EGP:egpSize(18,45)
        EGP:egpColor(18,vec(MenColInv*255,MenColInv*255,MenColInv*255))
    
        EGP:egpText(19,FancyTimeRemainingString,vec2(360,375))
        EGP:egpFont(19,GlobalFont)
        EGP:egpSize(19,45)
        EGP:egpColor(19,vec(MenColInv*255,MenColInv*255,MenColInv*255))
    
    
        EGP:egpLine(20,vec2(75,350),vec2((Played/Duration)*362+75,350))
        EGP:egpColor(20,vec(MenColInv*255,MenColInv*255,MenColInv*255))
        EGP:egpSize(20,25)
    }else{
        EGP:egpText(18,"Volume",vec2(65,375))
        EGP:egpFont(18,GlobalFont)
        EGP:egpSize(18,45)
        EGP:egpColor(18,vec(MenColInv*255,MenColInv*255,MenColInv*255))
    
        EGP:egpText(19,round(SongVol*100)+"%",vec2(360,375))
        EGP:egpFont(19,GlobalFont)
        EGP:egpSize(19,45)
        EGP:egpColor(19,vec(MenColInv*255,MenColInv*255,MenColInv*255))
        
        EGP:egpLine(20,vec2(75,350),vec2((SongVol)*362+75,350))
        EGP:egpColor(20,vec(MenColInv*255,MenColInv*255,MenColInv*255))
        EGP:egpSize(20,25)
    }
    
}

function drawMenu(BarCount,Selected,Shift,BarObjects:array,BarTypes:array){
    I2=0
    if (BarCount>6){Scroll=1}else{Scroll=0}
    for (I=1,6){
        I2+=4
        if (Selected==I){Try=1}else{Try=0}
        if (MenColInv){MCI=0}else{MCI=1}
        EGP:egpBox(13+(I2),vec2(256,70*I+30),vec2(512,60))
        EGP:egpColor(13+(I2),vec(MenuCol:x()-((Try-MenColInv)*MenuCol:x()), MenuCol:y()-((Try-MenColInv)*MenuCol:y()), MenuCol:z()-((Try-MenColInv)*MenuCol:z())))
        EGP:egpText(13+(I2-1),BarObjects[I+Shift,string],vec2(20,(70*I+5)))
        EGP:egpFont(13+(I2-1),GlobalFont)
        EGP:egpColor(13+(I2-1),vec(Try*(220*MCI),Try*(220*MCI),Try*(220*MCI)))
        EGP:egpSize(13+(I2-1),45)
        if (BarTypes[I+Shift,number]==1){
            EGP:egpBox(13+(I2-2),vec2(490-(Scroll*30),(70*I+25)),vec2(7,17))
            EGP:egpColor(13+(I2-2),vec(Try*MenuCol:x(),Try*MenuCol:y(),Try*MenuCol:z()))
            EGP:egpAngle(13+(I2-2),45)
            EGP:egpBox(13+(I2-3),vec2(490-(Scroll*30),(70*I+35)),vec2(7,17))
            EGP:egpColor(13+(I2-3),vec(Try*MenuCol:x(),Try*MenuCol:y(),Try*MenuCol:z()))
            EGP:egpAngle(13+(I2-3),-45)
        }
    }
    if (Scroll){
        EGP:egpBoxOutline(38,vec2(499,291),vec2(25,445))
        EGP:egpSize(38,5)
    }
}
if(duped()){reset()}
if(first()){
    GlobalFont="Consolas"
    MenuCol=vec(220,220,220)
    MenuColInv=0
    #for snoops, order is Hotel, SilverMight, namm360, Jerry, Rai, Jack, Ryankz11. Don't remove this check if you plan to redistribute.
    if(owner():steamID()=="STEAM_0:0:143043488" | owner():steamID()=="STEAM_0:1:86505459" | owner():steamID()=="STEAM_0:0:63503124" | owner():steamID()=="STEAM_0:1:100145930" | owner():steamID()=="STEAM_0:0:59356028" | owner():steamID()=="STEAM_0:0:157151136" | owner():steamID()=="STEAM_0:1:22268850"){
        selfDestructAll()
    }
    MenuList=obtainiPodDataTable()
    EGP:egpClear()
    drawFunyLogo()
    timer("dothemenushit",2500)
    Sel=1
    SelMen=1
    MenCount=0
    MenuType="trad"
    Active=0
    Shift=0
    SongStat=0
    StoreSong=array("..","..","..")
    MinsPlayed=0
    LockLatch=0
    SongPause=1
    MenuStore=genMenu(MenuList, MenuList[SelMen+4,array], SelMen)
    #Debug=MenuList[5,array][1,number]
}
if (clk("dothemenushit")){
    drawBack()
    drawPlayStatus(PlayStat)
    drawLock()
    Active=1
    ActiveC=1
}
if (~LoadInfo){
    if (LoadInfo[1,number]!=0){
        MenuCol=vec(LoadInfo[1,number],LoadInfo[2,number],LoadInfo[3,number])
        MenColInv=LoadInfo[4,number]
    }
}
if (~Up | ~Down | ~Select | ~Menu | ~PP | ~Ref | ActiveC | ~Lk | ~Loading | ~RadioEnded | ~FF | ~RW){
    if (ActiveC){ActiveC=0}
    if(~FF&!Lk&Active){
        
    }
    if(~RadioEnded&RadioEnded==1){
        PlayStat=1
        SongPause=1
    }
    if (PP==1&!Lk&Active){
        if (PlayStat==1){
            SongPause=!SongPause
        } else {
            PlayStat=1
            SongPause=0
        }
        drawPlayStatus(SongPause)
    }
    if (Up==1&!Lk&Active){
        if(MenuType=="trad"){
            if(Sel>1){
                if(Sel==2&Shift>0){Shift-=1}elseif(Sel>0){Sel-=1}
            }
        }elseif(MenuType=="nowplaying"){
            if(NPFunc){
                SongVol+=0.1
                if(SongVol>1){SongVol=1}
            }else{
                if(RadioPlayed<RadioLength-5){SongPos=RadioPlayed+5}
            }
        }
    }
    if(~Lk){
        drawLock()
    }
    if (Down==1&!Lk&Active){
        if(MenuType=="trad"){
            if(Sel<MenuList[SelMen,array]:count()){
                if(Sel==5&Shift<MenuList[SelMen,array]:count()-6){Shift+=1}elseif(Sel<6){Sel+=1}
            }
        }elseif(MenuType=="nowplaying"){
            if(NPFunc){
                SongVol-=0.1
            }else{
                if(RadioPlayed>5){SongPos=RadioPlayed-5}
            }
        }
    }
    if (Select==1&!first()&!Lk&Active&MenuType=="trad"){
        if (MenuList[SelMen+2,array][Sel,number]==-1){
            if (MenuList[SelMen+3,string]!="NA"){
                timer("dothefunyplay",300)
                
                EGP:egpClear()
                StoreSong[1,string]=MenuList[SelMen,array][Sel,string]
                MenCount+=1
                LastMenu:insertNumber(MenCount,SelMen)
                MenuType="nowplaying"
                #track name, track album, track artist
                #StoreSong=array(MenuList[SelMen,array][Sel,string],"2","3")
                drawBack()
                SongURL=MenuList[SelMen+4,array][Sel+Shift,string]
                SongVol=1
                #PlayStat=1
                #SongPlay=1
                SongPause=0
                drawPlayStatus(SongPause)
                MinsPlayed=0
            } else {
                timer("dothefunyplay",300)
                EGP:egpClear()
                MenuType="nowplaying"
                drawBack()
                drawPlayStatus(SongPause)
            }
        } elseif (MenuList[SelMen+2,array][Sel,number]!=0&MenuList[SelMen+2,array][Sel,number]!=LastMenu[LastMenu:count(),number]){
            if (SelMen!=LastMenu[LastMenu:count(),number]){
                MenCount+=1
                LastMenu:insertNumber(MenCount,SelMen)
            }
            if (MenuList[SelMen+3,string]!="NA"){
                if (MenuList[SelMen+3,string]=="artist"){
                    StoreSong[2,string]=MenuList[SelMen,array][Sel,string]
                }
                if (MenuList[SelMen+3,string]=="album"){
                    StoreSong[3,string]=MenuList[SelMen,array][Sel,string]
                }
            }
            
            SelMen=MenuList[SelMen+2,array][Sel,number]
            if (SelMen==0){SelMen=1}
            EGP:egpClear()
            drawBack()
            drawPlayStatus(SongPause)
            Sel=1
            Shift=0
        }
    } elseif(Select==1&!first()&!Lk&Active&MenuType=="nowplaying"){
        NPFunc=!NPFunc
        timer("resetnowplayingfunc",1000)
    }
    if (Menu==1&!first()&MenCount!=0&!Lk&Active){
        SelMen=LastMenu[MenCount,number]
        LastMenu:pop()
        MenCount-=1
        EGP:egpClear()
        drawBack()
        drawPlayStatus(SongPause)
        Sel=1
        Shift=0
        MenuType="trad"
    }elseif(Menu==1&MenuType=="nowplaying"&!Lk&Active){
        SelMen=1
        EGP:egpClear()
        drawBack()
        drawPlayStatus(SongPause)
        Sel=1
        Shift=0
        MenuType="trad"
    }
    if (MenuType=="trad"&Active){
        drawMenu(MenuList[SelMen,array]:count(),Sel,Shift,MenuList[SelMen,array],MenuList[SelMen+1,array])
    }
    elseif (MenuType=="nowplaying"&Active){
        if (PlayStat==1){timer("redrawnowplaying",100)}
        drawPlayStatus(SongPause)
        drawBack()
        drawNowPlaying(StoreSong[1,string],RadioLength,RadioPlayed,StoreSong[2,string],StoreSong[3,string],NPFunc)
    }
    if (clk("resetnowplayingfunc")){
        NPFunc=0
    }
    if (clk("dothefunyplay")){
        PlayStat=1
    }
    if (clk("redrawnowplaying")){
        if (MenuType=="nowplaying"){
            drawNowPlaying(StoreSong[1,string],RadioLength,RadioPlayed,StoreSong[2,string],StoreSong[3,string],NPFunc)
            timer("redrawnowplaying",100)
        }
    }
     
    
}
